# -*- coding: utf-8 -*-
"""IR_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pA7tJ7L_srs4C9aBCv-oF1Q_a0idAuql
"""

from google.colab import drive
drive.mount('/content/gdrive')

import re

word = "\n"
if re.match(r'[a-zA-Z][a-zA-Z0-9]*', word):
    print(0)
else:
    print(1)

import keyword

def replaceVariables(code):
    n_code = []
    keylist = keyword.kwlist
    lines = code.splitlines()
#     symbol_table = dict()
#     counter = 1
    for l in lines:
        arr = l.split(" ")
        flag = False
        for (i, word) in enumerate(arr):
            if re.match(r'\s*#', word):
                flag = True
                break
            if re.match(r'[a-zA-Z][a-zA-Z0-9]*', word):
                if word not in keylist:
#                     var = 'var' + str(counter)
#                     if symbol_table.get(word) is None:
#                     symbol_table[word] = var
#                     counter += 1
                    if word[-1] == ':':
                        arr[i] = 'var:'
                    else:
                        arr[i] = 'var'
#                     else:
#                         if word[-1] == ':':
#                             arr[i] = symbol_table[word] + ':'
#                         else:
#                             arr[i] = symbol_table[word]
            else:
                arr[i] = word
        if flag is False:
            narr = []
            for j in arr:
                narr.append(j)
                narr.append(" ")
            narr.append("\n")
            n_code.append(''.join(narr))
    t = '\n'.join(n_code).split('\n')
    return t

l = ['# offsetFile - file pointer',
 '# searchTerms - list of words',
 '',
 'for line in offsetFile:',
 '    for word in searchTerms:',
 '        if word in line:',
 '           # here get the next two terms after the word',
 '']
c = replaceVariables("\n".join(l))

c

l = ['# offsetFile - file pointer',
 '# searchTerms - list of words',
 '',
 'for line in offsetFile:',
 '    for word in searchTerms:',
 '        if word in line:',
 '           # here get the next two terms after the word',
 '']

x = "\n".join(l)

x

abc = "def abcdef:"

z = abc.split(" ")
print(z)
for x in z:
    if re.match(r'[a-zA-Z][a-zA-Z0-9]*[:]*', abc):
        print(x)

